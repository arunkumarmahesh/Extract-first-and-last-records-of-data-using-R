}
print(data( data1 ))
}
```
install.packages("Hmisc")
install.packages("officer")
install.packages("magrittr")
install.packages("sas7bdat")
install.packages("dplyr")
install.packages("rtf")
knitr::opts_chunk$set(echo = TRUE)
Libraries <- c("Hmisc", "officer","magrittr", "grid", "gridExtra","gtable", "foreign", "sas7bdat", "dplyr","rtf")
lapply (Libraries,library, character.only = TRUE)
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
trace(utils:::unpackPkgZip, quote(Sys.sleep(2)), at = which(grepl("Sys.sleep", body(utils:::unpackPkgZip), fixed = TRUE)))
install.packages("lattice")
knitr::opts_chunk$set(echo = TRUE)
Libraries <- c("Hmisc", "officer","magrittr", "grid", "gridExtra","gtable", "foreign", "sas7bdat", "dplyr","rtf")
lapply (Libraries,library, character.only = TRUE)
---
title: "Adverse event listing markdown"
author: "Arun_Mahesh"
date: '`r format(Sys.Date(), "%Y-%B-%d")`'
output:
word_document:
reference_docx: New listing.docx
html_document:
df_print: paged
pdf_document: default
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r echo=FALSE, results='asis'}
Libraries <- c("Hmisc", "officer","magrittr", "grid", "gridExtra","gtable", "foreign", "sas7bdat", "dplyr","rtf")
lapply (Libraries,library, character.only = TRUE)
#########################################
data1 <- read.sas7bdat("C:\\Users\\MAHESAR1\\Desktop\\new\\Dynamic reporting\\adae.sas7bdat")
data <- read.sas7bdat("C:\\Users\\MAHESAR1\\Desktop\\new\\Dynamic reporting\\adae.sas7bdat")
######## Creating function
# Print out data from the adverse event dataset
data <- function(data) {
#data <- read.sas7bdat(data)
#data = read.sas7bdat("C:\\Users\\MAHESAR1\\Desktop\\new\\Dynamic reporting\\adae.sas7bdat")
data <- subset (data, select = c(CCS, ASR, AESER, AETERM, AEDECOD, AEBODSYS, AESTDTC, AEENDTC, AETOXGR, AERELN,
AEACNOTN, AEACNN, AEOUTN, SAFFL))
data <- data.frame(data, stringsAsFactors = FALSE)
data$AESTDTC <- as.Date(  data$AESTDTC , format = "%Y-%m-%d")
data$AEENDTC <- as.Date(  data$AEENDTC, format = "%Y-%m-%d")
data$DURATION <- data$AEENDTC - data$AESTDTC
############################
### Sorting data
############################
sort <- c("CCS", "AESTDTC", "AEENDTC") ##### select parameter names to sort in the dataset
data <- arrange_(data, .dots = sort)
#########################
#### Filter
#########################
fil_ter <- quote(SAFFL %in% "Y")
## If we want to filter any observation in the parameters we can use this step, here SAFFL is the parameter and "Y" is the observations
data <- filter_(data, .dots = fil_ter)
#################################
#### Concatenating parameters
#################################
PTTERM <- "PTTERM"
data <- mutate (data, !!PTTERM := paste (AETERM, AEDECOD, AEBODSYS, sep ="\n"))
###############################
##### selecting variable names
################################
column_names1 <- c ("CCS", "ASR", "AESER", "PTTERM" , "AESTDTC", "AEENDTC", "DURATION", "AETOXGR", "AERELN",
"AEACNOTN", "AEACNN", "AEOUTN")
## In this example we have taken adverse event	as a dataset and passed required parameter names which need to be derived further
data <- select_ ( data, .dots = column_names1) #### In this step the dataset is build with specified colum names above
##################################
#### Renaming the column Names
##################################
CCS <- paste0("country/","\n","Subject","\n","identifier", collapse= " ") ### renaming column name to country subject identifier
data <- rename (data, !!CCS := CCS) ### Concatenating country and subject identifier
ASR <- paste0("Age/","\n","Sex","\n","Race", collapse= " ")
data <- rename (data, !!ASR := ASR)
PTTERM <- paste0("Reported term/","\n","Preferred term/","\n"," System organ class", collapse= " ")
data <- rename (data, !!PTTERM := PTTERM)
AESTDTC <- paste0("Start","\n","date/","\n"," day", collapse= " ")
data <- rename (data, !!AESTDTC := AESTDTC)
AEENDTC <- paste0("End","\n","date/","\n"," day", collapse= " ")
data <- rename (data, !!AEENDTC := AEENDTC)
AESER <- paste0("Serious","\n"," event", collapse= " ") ## renaming the parameter names as per listings
data <- rename (data, !!AESER := AESER)
AERELN <- paste0("Cau-","\n","sal-", "\n", "ity", collapse= " ") ## renaming the parameter names as per listings
data <- rename (data, !!AERELN := AERELN)
AEACNOTN <- paste0("Action","\n","taken", "\n", "with","\n", "med." , collapse= " ") ## renaming the parameter names as per listings
data <- rename (data, !!AEACNOTN := AEACNOTN)
AEACNN <- paste0("Med","\n","or", "\n", "ther","\n", "taken" , collapse= " ") ## renaming the parameter names as per listings
data <- rename (data, !!AEACNN := AEACNN)
AEOUTN <- paste0("Out-","\n","come", collapse= " ") ## renaming the parameter names as per listings
data <- rename (data, !!AEOUTN := AEOUTN)
DURATION <- paste0("Dur","\n","ation","\n","(days)",  collapse= " ") ## renaming the parameter names as per listings
data <- rename (data, !!DURATION := DURATION)
AETOXGR <- paste0("Toxi","\n","city","\n","Grade",  collapse= " ") ## renaming the parameter names as per listings
data <- rename (data, !!AETOXGR := AETOXGR)
#################################
#### Printing into PDF document
#################################
data$CAL <- NA
if (nrow(data)>300){ # this condition is static need to change into dynamic when we use this sort of conditions
data$CAL <- rep(seq(1,nrow(data),2),each =2)
}
#####################################################
####### Exporting into word document
#####################################################
for ( i in unique(data$CAL)){
new <-  data [data$CAL == i , ]
new$CAL <- NULL
#name.width <- max(sapply(names(new), nchar))
# new <- format(new, justify = "centre")
cat(new)
#embed_fonts("New listing.rtf", format = "Courier New", outfile = "New listing-embed.rtf")
}
print(data( data1 ))
}
```
setwd("C:/Users/MAHESAR1/Desktop/DEDRR/updated listings/Dynamic reporting/Adverse_event_Plumber_API")
---
title: "Adverse event listing markdown"
author: "Arun_Mahesh"
date: '`r format(Sys.Date(), "%Y-%B-%d")`'
output:
word_document:
reference_docx: New listing.docx
html_document:
df_print: paged
pdf_document: default
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
``
library("plumber")
p <- plumb("Adverse_event_plumber.R")
p$run(port = 8000)
library("Hmisc", lib.loc="C:/Users/MAHESAR1/R/win-library/3.5")
install.packages("LatticeKrig")
Libraries <- c("Hmisc", "officer","magrittr", "grid", "gridExtra","gtable", "foreign", "sas7bdat", "dplyr")
lapply (Libraries,library, character.only = TRUE)
R CMD INSTALL latticeExtra_0.6-28.tar
INSTALL latticeExtra_0.6-28.tar
trace(utils:::unpackPkgZip, quote(Sys.sleep(2)), at = which(grepl("Sys.sleep", body(utils:::unpackPkgZip), fixed = TRUE)))
devtools::install_version("latticeExtra", version="0.6-28")
install.packages("LatticeDesign")
Libraries <- c("Hmisc", "officer","magrittr", "grid", "gridExtra","gtable", "foreign", "sas7bdat", "dplyr")
library("plumber")
p <- plumb("Adverse_event_plumber.R")
p$run(port = 8000)
Libraries <- c("Hmisc", "officer","magrittr", "grid", "gridExtra","gtable", "foreign", "sas7bdat", "dplyr","LatticeDesign")
lapply (Libraries,library, character.only = TRUE)
setwd("C:/Users/MAHESAR1/Desktop/DEDRR/updated listings/Dynamic reporting/Adverse_event_Plumber_API")
Libraries <- c("Hmisc", "officer","magrittr", "grid", "gridExtra","gtable", "foreign", "sas7bdat", "dplyr","rtf")
lapply (Libraries,library, character.only = TRUE)
install.packages("haven")
Libraries <- c('haven', "officer","magrittr", "grid", "gridExtra","gtable", "foreign", "sas7bdat", "dplyr","rtf")
lapply (Libraries,library, character.only = TRUE)
data <- read_sas("C:\\Users\\MAHESAR1\\Desktop\\new\\Dynamic reporting\\adae.sas7bdat")
setwd("C:/Users/MAHESAR1/Desktop/DEDRR/updated listings/Dynamic reporting/Adverse_event_Plumber_API")
data <- read_sas("C:\\Users\\MAHESAR1\\Desktop\\new\\Dynamic reporting\\adae.sas7bdat")
data <- read_sas("C:\\Users\\MAHESAR1\\Desktop\\DEDRR\\updated listings\\Dynamic reporting\\Adverse_event_Plumber_API\\adae.sas7bdat")
View(data)
str(data)
as_tibble(data)
View(data)
head(str(data))
View(data)
setwd("C:/Users/MAHESAR1/Desktop/R_SME/Srinivas")
setwd ("C:\\Users\\MAHESAR1\\Desktop\\R_SME\\Srinivas")
library(openxlsx)
library(dplyr)
dat <- read.xlsx("data.xlsx")
data %>%
#gather(year, val, 2:5) %>%
group_by(subject) %>%
summarise(first_value = first(na.omit(val)),
last_value = last(na.omit(val)))
dat %>%
#gather(year, val, 2:5) %>%
group_by(subject) %>%
summarise(first_value = first(na.omit(val)),
last_value = last(na.omit(val)))
dat %>%
#gather(year, val, 2:5) %>%
group_by(subject) %>%
summarise(first_value = first(na.omit(values)),
last_value = last(na.omit(values)))
dat %>%
#gather(year, val, 2:5) %>%
group_by(subject) %>%
summarise(first_value = first(na.omit(values)),
last_value = last(na.omit(values))) %>%
left_join(df, ., by = 'subject')
dat %>%
#gather(year, val, 2:5) %>%
group_by(subject) %>%
summarise(first_value = first(na.omit(values)),
last_value = last(na.omit(values))) %>%
left_join(dat, ., by = 'subject')
dat %>%
gather(values, val)
library(tidyr)
dat %>%
gather(values, val)
dat %>%
gather(values, val, values)
View(dat)
dat <- read.xlsx("data.xlsx", detectDates = T)
View(dat)
View(dat)
data1 <- dat %>%
group_by(subject) %>%
summarise(first_value = first(na.omit(values)),
last_value = last(na.omit(values))) %>%
left_join(dat, ., by = 'subject')
data2 <- dat %>%
group_by(subject, lab) %>%
summarise(first_value = first(na.omit(values)),
last_value = last(na.omit(values))) %>%
left_join(dat, ., by = c('subject','lab'))
View(data2)
data3 <- dat %>%
group_by(subject, lab, date) %>%
summarise(first_value = first(na.omit(values)),
last_value = last(na.omit(values))) %>%
left_join(dat, ., by = c('subject','lab', 'date'))
View(data3)
i=1
dat$values[i]
dat$values
dat$values[dat$subject ==1]
dat$values[dat$subject ==1][1]
dat$values[dat$subject ==1]
nrow(dat$values[dat$subject ==1])
length(dat$values[dat$subject ==1])
max(length(dat$values[dat$subject ==1]))
dat$values[max(length(dat$values[dat$subject ==1]))]
dat_loop <- dat
for( i in unique(dat$subject)){
x <- dat$values[i][1]
y <- dat$values[max(length(dat$values[i]))]
dat_loop$first[i] <- x
dat_loop$last[i] <- y
}
View(dat_loop)
dat_loop <- dat
for( i in unique(dat$subject)){
x <- dat$values[i][1]
y <- dat$values[max(length(dat$values[i]))]
dat_loop$first[dat$subject==i] <- x
dat_loop$last[dat$subject==i] <- y
}
View(dat_loop)
i
dat$values[i][1]
View(dat)
dat_loop <- dat
for( i in unique(dat$subject)){
x <- dat$values[dat$subject==i][1]
y <- dat$values[max(length(dat$values[dat$subject==i]))]
dat_loop$first[dat$subject==i] <- x
dat_loop$last[dat$subject==i] <- y
}
View(dat_loop)
dat_loop <- dat
dat_loop <- dat
for( i in unique(dat_loop$subject)){
x <- dat_loop$values[dat_loop$subject==i][1]
y <- dat_loop$values[max(length(dat_loop$values[dat_loop$subject==i]))]
dat_loop$first[dat_loop$subject==i] <- x
dat_loop$last[dat_loop$subject==i] <- y
}
View(dat_loop)
View(data1)
i
dat_loop$values[dat_loop$subject==i]
length(dat_loop$values[dat_loop$subject==i])
max(length(dat_loop$values[dat_loop$subject==i]))
dat_loop$values[max(length(dat_loop$values[dat_loop$subject==i]))]
nrow(dat_loop[dat_loop$values[dat_loop$subject==i],]
)
dat_loop$values[nrow(dat_loop[dat_loop$values[dat_loop$subject==i],])]
dat_loop$values[nrow(dat_loop[dat_loop$values[dat_loop$subject==i],])][dat_loop$subject==i]
dat_loop <- dat
dat_loop$values[dat_loop$subject==i, max(length(dat_loop$values[dat_loop$subject==i]))]
dat_loop$values[dat_loop$subject==i& max(length(dat_loop$values[dat_loop$subject==i]))]
dat_loop$values[dat_loop$subject==i][1]
dat_loop$values[max(length(dat_loop$values[dat_loop$subject==i]))][dat_loop$subject==i]
dat_loop$values[max(length(dat_loop$values[dat_loop$subject==i])) & dat_loop$subject==i]
max(length(dat_loop$values[dat_loop$subject==i]))
dat_loop$values[max(length(dat_loop$values[dat_loop$subject==i])) && dat_loop$subject==i]
dat_loop$values[max(length(dat_loop$values[dat_loop$subject==i]))]
dat_loop$values[dat_loop$subject==i][max(length(dat_loop$values[dat_loop$subject==i]))]
dat_loop <- dat
for( i in unique(dat_loop$subject)){
x <- dat_loop$values[dat_loop$subject==i][1]
y <- dat_loop$values[dat_loop$subject==i][max(length(dat_loop$values[dat_loop$subject==i]))]
dat_loop$first[dat_loop$subject==i] <- x
dat_loop$last[dat_loop$subject==i] <- y
}
View(dat_loop)
dat_loop1 <- dat
dat_loop1 <- dat
dat_loop1 <- dat
for( i in unique(dat_loop1$subject)){
for( j in unique(dat_loop1$lab[dat_loop1$subject == i]))
x <- dat_loop1$values[dat_loop1$subject==i & dat_loop1$lab==j][1]
y <- dat_loop1$values[dat_loop1$subject==i & dat_loop1$lab==j][max(length(dat_loop1$values[dat_loop1$subject==i & dat_loop1$lab==j]))]
dat_loop1$first[dat_loop1$subject==i & dat_loop1$lab==j] <- x
dat_loop1$last[dat_loop1$subject==i & dat_loop1$lab==j] <- y
}
View(dat_loop1)
dat_loop1 <- dat
dat_loop1 <- dat
for( i in unique(dat_loop1$subject)){
for( j in unique(dat_loop1$lab[dat_loop1$subject == i])){
x <- dat_loop1$values[dat_loop1$subject==i & dat_loop1$lab==j][1]
y <- dat_loop1$values[dat_loop1$subject==i & dat_loop1$lab==j][max(length(dat_loop1$values[dat_loop1$subject==i & dat_loop1$lab==j]))]
dat_loop1$first[dat_loop1$subject==i & dat_loop1$lab==j] <- x
dat_loop1$last[dat_loop1$subject==i & dat_loop1$lab==j] <- y
}
}
View(dat_loop1)
dat_loop2 <- dat
dat_loop2 <- dat
for( i in unique(dat_loop2$subject)){
for( j in unique(dat_loop2$lab[dat_loop2$subject == i])){
for (k in unique (dat_loop2$date[dat_loop2$subject==i & dat_loop2$lab==j])){
x <- dat_loop2$values[dat_loop2$subject==i & dat_loop2$lab==j & dat_loop2$date ==k][1]
y <- dat_loop2$values[dat_loop2$subject==i & dat_loop2$lab==j & dat_loop2$date ==k][max(length(dat_loop2$values[dat_loop2$subject==i & dat_loop2$lab==j & dat_loop2$date ==k]))]
dat_loop2$first[dat_loop2$subject==i & dat_loop2$lab==j & dat_loop2$date ==k] <- x
dat_loop2$last[dat_loop2$subject==i & dat_loop2$lab==j & dat_loop2$date ==k] <- y
}
}
}
View(dat_loop2)
dat_same <- dat
dat_same <- dat
dat_same$new <- NA
for( i in unique(dat_same$subject)){
x <- dat_same$values[dat_same$subject==i][1]
y <- dat_same$values[dat_same$subject==i][max(length(dat_same$values[dat_same$subject==i]))]
dat_same$new[dat_same$subject==i] [1] <- x
dat_same$new[dat_same$subject==i][max(length(dat_same$values[dat_same$subject==i]))] <- y
}
View(dat_same)
dat_same$new <- NULL
dat_same$first&last <- NULL
dat_same$first_last <- NULL
dat_same <- dat
dat_same$first_last <- NULL
for( i in unique(dat_same$subject)){
x <- dat_same$values[dat_same$subject==i][1]
y <- dat_same$values[dat_same$subject==i][max(length(dat_same$values[dat_same$subject==i]))]
dat_same$first_last[dat_same$subject==i] [1] <- x
dat_same$first_last[dat_same$subject==i][max(length(dat_same$values[dat_same$subject==i]))] <- y
}
View(dat_same)
dat_same <- dat
dat_same$first_last <- NULL
View(dat_same)
dat_same <- dat
dat_same$first_last <- NA
for( i in unique(dat_same$subject)){
x <- dat_same$values[dat_same$subject==i][1]
y <- dat_same$values[dat_same$subject==i][max(length(dat_same$values[dat_same$subject==i]))]
dat_same$first_last[dat_same$subject==i] [1] <- x
dat_same$first_last[dat_same$subject==i][max(length(dat_same$values[dat_same$subject==i]))] <- y
}
View(dat_same)
dat_same1 <- dat
dat_same1$first_last <- NA
for( i in unique(dat_same1$subject)){
for( j in unique(dat_same1$lab[dat_same1$subject == i])){
x <- dat_same1$values[dat_same1$subject==i & dat_same1$lab==j][1]
y <- dat_same1$values[dat_same1$subject==i & dat_same1$lab==j][max(length(dat_same1$values[dat_same1$subject==i & dat_same1$lab==j]))]
dat_same1$first[dat_same1$subject==i & dat_same1$lab==j] [1] <- x
dat_same1$last[dat_same1$subject==i & dat_same1$lab==j] [max(length(dat_same1$values[dat_same1$subject==i & dat_same1$lab==j]))] <- y
}
}
View(dat_same1)
dat_same1 <- dat
dat_same1 <- dat
dat_same1$first_last <- NA
for( i in unique(dat_same1$subject)){
for( j in unique(dat_same1$lab[dat_same1$subject == i])){
x <- dat_same1$values[dat_same1$subject==i & dat_same1$lab==j][1]
y <- dat_same1$values[dat_same1$subject==i & dat_same1$lab==j][max(length(dat_same1$values[dat_same1$subject==i & dat_same1$lab==j]))]
dat_same$first_last[dat_same1$subject==i & dat_same1$lab==j] [1] <- x
dat_same$first_last[dat_same1$subject==i & dat_same1$lab==j] [max(length(dat_same1$values[dat_same1$subject==i & dat_same1$lab==j]))] <- y
}
}
View(dat_same1)
i
j
dat_same1$values[dat_same1$subject==i & dat_same1$lab==j][1]
dat_same1$values[dat_same1$subject==i & dat_same1$lab==j][max(length(dat_same1$values[dat_same1$subject==i & dat_same1$lab==j]))]
View(dat)
dat_same1 <- dat
dat_same1$first_last <- NA
View(dat_same1)
for( i in unique(dat_same1$subject)){
for( j in unique(dat_same1$lab[dat_same1$subject == i])){
x <- dat_same1$values[dat_same1$subject==i & dat_same1$lab==j][1]
y <- dat_same1$values[dat_same1$subject==i & dat_same1$lab==j][max(length(dat_same1$values[dat_same1$subject==i & dat_same1$lab==j]))]
dat_same$first_last[dat_same1$subject==i & dat_same1$lab==j] [1] <- x
dat_same$first_last[dat_same1$subject==i & dat_same1$lab==j] [max(length(dat_same1$values[dat_same1$subject==i & dat_same1$lab==j]))] <- y
}
}
View(dat_same1)
x
y
dat_same$first_last[dat_same1$subject==i & dat_same1$lab==j]
dat_same <- dat
dat_same$first_last <- NA
for( i in unique(dat_same$subject)){
x <- dat_same$values[dat_same$subject==i][1]
y <- dat_same$values[dat_same$subject==i][max(length(dat_same$values[dat_same$subject==i]))]
dat_same$first_last[dat_same$subject==i] [1] <- x
dat_same$first_last[dat_same$subject==i][max(length(dat_same$values[dat_same$subject==i]))] <- y
}
##########
## unique Subject & lab
#########
dat_same1 <- dat
dat_same1$first_last <- NA
for( i in unique(dat_same1$subject)){
for( j in unique(dat_same1$lab[dat_same1$subject == i])){
x <- dat_same1$values[dat_same1$subject==i & dat_same1$lab==j][1]
y <- dat_same1$values[dat_same1$subject==i & dat_same1$lab==j][max(length(dat_same1$values[dat_same1$subject==i & dat_same1$lab==j]))]
dat_same1$first_last[dat_same1$subject==i & dat_same1$lab==j] [1] <- x
dat_same1$first_last[dat_same1$subject==i & dat_same1$lab==j] [max(length(dat_same1$values[dat_same1$subject==i & dat_same1$lab==j]))] <- y
}
}
View(dat_same)
View(dat_same1)
dat_same2 <- dat
dat_same2$first_last <- NA
dat_same2 <- dat
dat_same2$first_last <- NA
for( i in unique(dat_same2$subject)){
for( j in unique(dat_same2$lab[dat_same2$subject == i])){
for (k in unique (dat_same2$date[dat_same2$subject==i & dat_same2$lab==j])){
x <- dat_same2$values[dat_same2$subject==i & dat_same2$lab==j & dat_same2$date==k][1]
y <- dat_same2$values[dat_same2$subject==i & dat_same2$lab==j & dat_same2$date==k][max(length(dat_same2$values[dat_same2$subject==i & dat_same2$lab==j] & dat_same2$date==k))]
dat_same2$first_last[dat_same2$subject==i & dat_same2$lab==j & dat_same2$date ==k ] [1] <- x
dat_same2$first_last[dat_same2$subject==i & dat_same2$lab==j & dat_same2$date == k] [max(length(dat_same2$values[dat_same2$subject==i & dat_same2$lab==j & dat_same2$date ==k ]))] <- y
}
}
}
View(dat_same2)
dat_same2$values[dat_same2$subject==i & dat_same2$lab==j & dat_same2$date==k][1]
i
j
k
dat_same2$values[dat_same2$subject==i & dat_same2$lab==j & dat_same2$date==k][max(length(dat_same2$values[dat_same2$subject==i & dat_same2$lab==j] & dat_same2$date==k))]
dat_same2$values[dat_same2$subject==i & dat_same2$lab==j & dat_same2$date==k][max(length(dat_same2$values[dat_same2$subject==i & dat_same2$lab==j & dat_same2$date==k]))]
dat_same2 <- dat
dat_same2$first_last <- NA
for( i in unique(dat_same2$subject)){
for( j in unique(dat_same2$lab[dat_same2$subject == i])){
for (k in unique (dat_same2$date[dat_same2$subject==i & dat_same2$lab==j])){
x <- dat_same2$values[dat_same2$subject==i & dat_same2$lab==j & dat_same2$date==k][1]
y <- dat_same2$values[dat_same2$subject==i & dat_same2$lab==j & dat_same2$date==k][max(length(dat_same2$values[dat_same2$subject==i & dat_same2$lab==j & dat_same2$date==k]))]
dat_same2$first_last[dat_same2$subject==i & dat_same2$lab==j & dat_same2$date ==k ] [1] <- x
dat_same2$first_last[dat_same2$subject==i & dat_same2$lab==j & dat_same2$date == k] [max(length(dat_same2$values[dat_same2$subject==i & dat_same2$lab==j & dat_same2$date ==k ]))] <- y
}
}
}
View(dat_same2)
dat %>%
group_by(subject) %>%
summarise(first_last_value = c(first(na.omit(values)), last(na.omit(values))))
dat %>%
group_by(subject) %>%
summarise(first_last_value = paste(first(na.omit(values)), last(na.omit(values))))
dat %>%
group_by(subject) %>%
summarise(first_last_value = rbind(first(na.omit(values)), last(na.omit(values))))
dat %>%
group_by(subject) %>%
summarise(first_last_value = c(first(na.omit(values)), last(na.omit(values))))%>%
left_join(dat, ., by = 'subject')
dat %>%
group_by(subject) %>%
summarise(first_last_value = paste(first(na.omit(values)), last(na.omit(values))))%>%
left_join(dat, ., by = 'subject')
dat %>%
group_by(subject) %>%
summarise(first_last_value = c(first(na.omit(values)[1]), last(na.omit(values))))
dat %>%
group_by(subject) %>%
summarise(first_last_value = c(first(na.omit(values)[1])))
dat %>%
group_by(subject) %>%
summarise(first_last_value = c(first(na.omit(values))))
dat %>%
group_by(subject) %>%
summarise(first_last_value = c(first(na.omit(values))))%>%
cbind(dat, ., by = 'subject')
View(data1)
View(data2)
View(data3)
View(dat_loop)
View(dat_loop2)
View(dat_same)
View(dat_same2)
